/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { sastStatistic } from '../fn/dashboard/sast-statistic';
import { SastStatistic } from '../models/sast-statistic';
import { SastStatistic$Params } from '../fn/dashboard/sast-statistic';
import { scaStatistic } from '../fn/dashboard/sca-statistic';
import { ScaStatistic } from '../models/sca-statistic';
import { ScaStatistic$Params } from '../fn/dashboard/sca-statistic';

@Injectable({ providedIn: 'root' })
export class DashboardService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `sastStatistic()` */
  static readonly SastStatisticPath = '/api/dashboard/sast';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `sastStatistic()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  sastStatistic$Response(params?: SastStatistic$Params, context?: HttpContext): Observable<StrictHttpResponse<SastStatistic>> {
    return sastStatistic(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `sastStatistic$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  sastStatistic(params?: SastStatistic$Params, context?: HttpContext): Observable<SastStatistic> {
    return this.sastStatistic$Response(params, context).pipe(
      map((r: StrictHttpResponse<SastStatistic>): SastStatistic => r.body)
    );
  }

  /** Path part for operation `scaStatistic()` */
  static readonly ScaStatisticPath = '/api/dashboard/sca';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `scaStatistic()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  scaStatistic$Response(params?: ScaStatistic$Params, context?: HttpContext): Observable<StrictHttpResponse<ScaStatistic>> {
    return scaStatistic(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `scaStatistic$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  scaStatistic(params?: ScaStatistic$Params, context?: HttpContext): Observable<ScaStatistic> {
    return this.scaStatistic$Response(params, context).pipe(
      map((r: StrictHttpResponse<ScaStatistic>): ScaStatistic => r.body)
    );
  }

}
