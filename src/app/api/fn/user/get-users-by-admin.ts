/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { UserDetailPage } from '../../models/user-detail-page';
import { UserSortField } from '../../models/user-sort-field';
import { UserStatus } from '../../models/user-status';

export interface GetUsersByAdmin$Params {
  Name?: string;
  RoleId?: string;
  Status?: UserStatus;
  SortBy?: UserSortField;
  Size?: number;
  Page?: number;
  Desc?: boolean;
}

export function getUsersByAdmin(http: HttpClient, rootUrl: string, params?: GetUsersByAdmin$Params, context?: HttpContext): Observable<StrictHttpResponse<UserDetailPage>> {
  const rb = new RequestBuilder(rootUrl, getUsersByAdmin.PATH, 'get');
  if (params) {
    rb.query('Name', params.Name, {"style":"form"});
    rb.query('RoleId', params.RoleId, {"style":"form"});
    rb.query('Status', params.Status, {"style":"form"});
    rb.query('SortBy', params.SortBy, {"style":"form"});
    rb.query('Size', params.Size, {"style":"form"});
    rb.query('Page', params.Page, {"style":"form"});
    rb.query('Desc', params.Desc, {"style":"form"});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<UserDetailPage>;
    })
  );
}

getUsersByAdmin.PATH = '/api/user/by-admin';
